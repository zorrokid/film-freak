// Mocks generated by Mockito 5.4.0 from annotations
// in film_freak/test/blocs/release_view_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;
import 'dart:io' as _i19;

import 'package:film_freak/domain/entities/collection_item.dart' as _i17;
import 'package:film_freak/domain/entities/production.dart' as _i24;
import 'package:film_freak/domain/entities/release_picture.dart' as _i22;
import 'package:film_freak/domain/enums/media_type.dart' as _i23;
import 'package:film_freak/models/collection_item_edit_view_model.dart' as _i16;
import 'package:film_freak/models/collection_item_save_model.dart' as _i26;
import 'package:film_freak/models/collection_item_view_model.dart' as _i15;
import 'package:film_freak/models/list_models/release_list_model.dart' as _i20;
import 'package:film_freak/models/release_view_model.dart' as _i10;
import 'package:film_freak/persistence/query_specs/release_query_specs.dart'
    as _i21;
import 'package:film_freak/persistence/repositories/collection_item_comments_repository.dart'
    as _i11;
import 'package:film_freak/persistence/repositories/collection_item_media_repository.dart'
    as _i13;
import 'package:film_freak/persistence/repositories/collection_item_properties_repository.dart'
    as _i12;
import 'package:film_freak/persistence/repositories/collection_items_repository.dart'
    as _i9;
import 'package:film_freak/persistence/repositories/release_comments_repository.dart'
    as _i8;
import 'package:film_freak/persistence/repositories/release_medias_repository.dart'
    as _i7;
import 'package:film_freak/persistence/repositories/release_pictures_repository.dart'
    as _i4;
import 'package:film_freak/persistence/repositories/release_properties_repository.dart'
    as _i5;
import 'package:film_freak/persistence/repositories/releases_repository.dart'
    as _i3;
import 'package:film_freak/services/collection_item_service.dart' as _i25;
import 'package:film_freak/services/production_service.dart' as _i6;
import 'package:film_freak/services/release_service.dart' as _i14;
import 'package:logging/logging.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleasesRepository_1 extends _i1.SmartFake
    implements _i3.ReleasesRepository {
  _FakeReleasesRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleasePicturesRepository_2 extends _i1.SmartFake
    implements _i4.ReleasePicturesRepository {
  _FakeReleasePicturesRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleasePropertiesRepository_3 extends _i1.SmartFake
    implements _i5.ReleasePropertiesRepository {
  _FakeReleasePropertiesRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductionService_4 extends _i1.SmartFake
    implements _i6.ProductionService {
  _FakeProductionService_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleaseMediasRepository_5 extends _i1.SmartFake
    implements _i7.ReleaseMediasRepository {
  _FakeReleaseMediasRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleaseCommentsRepository_6 extends _i1.SmartFake
    implements _i8.ReleaseCommentsRepository {
  _FakeReleaseCommentsRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemsRepository_7 extends _i1.SmartFake
    implements _i9.CollectionItemsRepository {
  _FakeCollectionItemsRepository_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleaseViewModel_8 extends _i1.SmartFake
    implements _i10.ReleaseViewModel {
  _FakeReleaseViewModel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemCommentsRepository_9 extends _i1.SmartFake
    implements _i11.CollectionItemCommentsRepository {
  _FakeCollectionItemCommentsRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemPropertiesRepository_10 extends _i1.SmartFake
    implements _i12.CollectionItemPropertiesRepository {
  _FakeCollectionItemPropertiesRepository_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemMediaRepository_11 extends _i1.SmartFake
    implements _i13.CollectionItemMediaRepository {
  _FakeCollectionItemMediaRepository_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReleaseService_12 extends _i1.SmartFake
    implements _i14.ReleaseService {
  _FakeReleaseService_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemViewModel_13 extends _i1.SmartFake
    implements _i15.CollectionItemViewModel {
  _FakeCollectionItemViewModel_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItemEditViewModel_14 extends _i1.SmartFake
    implements _i16.CollectionItemEditViewModel {
  _FakeCollectionItemEditViewModel_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionItem_15 extends _i1.SmartFake
    implements _i17.CollectionItem {
  _FakeCollectionItem_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReleaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReleaseService extends _i1.Mock implements _i14.ReleaseService {
  MockReleaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);
  @override
  _i3.ReleasesRepository get releaseRepository => (super.noSuchMethod(
        Invocation.getter(#releaseRepository),
        returnValue: _FakeReleasesRepository_1(
          this,
          Invocation.getter(#releaseRepository),
        ),
      ) as _i3.ReleasesRepository);
  @override
  _i4.ReleasePicturesRepository get releasePicturesRepository =>
      (super.noSuchMethod(
        Invocation.getter(#releasePicturesRepository),
        returnValue: _FakeReleasePicturesRepository_2(
          this,
          Invocation.getter(#releasePicturesRepository),
        ),
      ) as _i4.ReleasePicturesRepository);
  @override
  _i5.ReleasePropertiesRepository get releasePropertiesRepository =>
      (super.noSuchMethod(
        Invocation.getter(#releasePropertiesRepository),
        returnValue: _FakeReleasePropertiesRepository_3(
          this,
          Invocation.getter(#releasePropertiesRepository),
        ),
      ) as _i5.ReleasePropertiesRepository);
  @override
  _i6.ProductionService get productionService => (super.noSuchMethod(
        Invocation.getter(#productionService),
        returnValue: _FakeProductionService_4(
          this,
          Invocation.getter(#productionService),
        ),
      ) as _i6.ProductionService);
  @override
  _i7.ReleaseMediasRepository get releaseMediasRepository =>
      (super.noSuchMethod(
        Invocation.getter(#releaseMediasRepository),
        returnValue: _FakeReleaseMediasRepository_5(
          this,
          Invocation.getter(#releaseMediasRepository),
        ),
      ) as _i7.ReleaseMediasRepository);
  @override
  _i8.ReleaseCommentsRepository get releaseCommentsRepository =>
      (super.noSuchMethod(
        Invocation.getter(#releaseCommentsRepository),
        returnValue: _FakeReleaseCommentsRepository_6(
          this,
          Invocation.getter(#releaseCommentsRepository),
        ),
      ) as _i8.ReleaseCommentsRepository);
  @override
  _i9.CollectionItemsRepository get collectionItemsRepository =>
      (super.noSuchMethod(
        Invocation.getter(#collectionItemsRepository),
        returnValue: _FakeCollectionItemsRepository_7(
          this,
          Invocation.getter(#collectionItemsRepository),
        ),
      ) as _i9.CollectionItemsRepository);
  @override
  _i10.ReleaseViewModel initializeModel(String? barcode) => (super.noSuchMethod(
        Invocation.method(
          #initializeModel,
          [barcode],
        ),
        returnValue: _FakeReleaseViewModel_8(
          this,
          Invocation.method(
            #initializeModel,
            [barcode],
          ),
        ),
      ) as _i10.ReleaseViewModel);
  @override
  _i18.Future<_i10.ReleaseViewModel> getModel(int? releaseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getModel,
          [releaseId],
        ),
        returnValue:
            _i18.Future<_i10.ReleaseViewModel>.value(_FakeReleaseViewModel_8(
          this,
          Invocation.method(
            #getModel,
            [releaseId],
          ),
        )),
      ) as _i18.Future<_i10.ReleaseViewModel>);
  @override
  _i18.Future<int> upsert(_i10.ReleaseViewModel? viewModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [viewModel],
        ),
        returnValue: _i18.Future<int>.value(0),
      ) as _i18.Future<int>);
  @override
  _i18.Future<bool> barcodeExists(String? barcode) => (super.noSuchMethod(
        Invocation.method(
          #barcodeExists,
          [barcode],
        ),
        returnValue: _i18.Future<bool>.value(false),
      ) as _i18.Future<bool>);
  @override
  _i18.Future<int> delete(
    int? id,
    _i19.Directory? releasePicDir,
    _i19.Directory? releasePicThumbnailDir,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            id,
            releasePicDir,
            releasePicThumbnailDir,
          ],
        ),
        returnValue: _i18.Future<int>.value(0),
      ) as _i18.Future<int>);
  @override
  _i18.Future<Iterable<_i20.ReleaseListModel>> getListModels(
          {_i21.ReleaseQuerySpecs? filter}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListModels,
          [],
          {#filter: filter},
        ),
        returnValue: _i18.Future<Iterable<_i20.ReleaseListModel>>.value(
            <_i20.ReleaseListModel>[]),
      ) as _i18.Future<Iterable<_i20.ReleaseListModel>>);
  @override
  _i18.Future<Map<int, List<_i22.ReleasePicture>>> getPicsByReleaseMap(
          Iterable<int>? releaseIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPicsByReleaseMap,
          [releaseIds],
        ),
        returnValue: _i18.Future<Map<int, List<_i22.ReleasePicture>>>.value(
            <int, List<_i22.ReleasePicture>>{}),
      ) as _i18.Future<Map<int, List<_i22.ReleasePicture>>>);
  @override
  _i18.Future<Map<int, Set<_i23.MediaType>>> getMediaTypesByReleaseMap(
          Iterable<int>? releaseIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaTypesByReleaseMap,
          [releaseIds],
        ),
        returnValue: _i18.Future<Map<int, Set<_i23.MediaType>>>.value(
            <int, Set<_i23.MediaType>>{}),
      ) as _i18.Future<Map<int, Set<_i23.MediaType>>>);
  @override
  _i18.Future<Map<int, List<_i24.Production>>> getProductionsByReleaseMap(
          Iterable<int>? releaseIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductionsByReleaseMap,
          [releaseIds],
        ),
        returnValue: _i18.Future<Map<int, List<_i24.Production>>>.value(
            <int, List<_i24.Production>>{}),
      ) as _i18.Future<Map<int, List<_i24.Production>>>);
}

/// A class which mocks [CollectionItemService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionItemService extends _i1.Mock
    implements _i25.CollectionItemService {
  MockCollectionItemService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);
  @override
  _i9.CollectionItemsRepository get collectionItemRepository =>
      (super.noSuchMethod(
        Invocation.getter(#collectionItemRepository),
        returnValue: _FakeCollectionItemsRepository_7(
          this,
          Invocation.getter(#collectionItemRepository),
        ),
      ) as _i9.CollectionItemsRepository);
  @override
  _i11.CollectionItemCommentsRepository get collectionItemCommentsRepository =>
      (super.noSuchMethod(
        Invocation.getter(#collectionItemCommentsRepository),
        returnValue: _FakeCollectionItemCommentsRepository_9(
          this,
          Invocation.getter(#collectionItemCommentsRepository),
        ),
      ) as _i11.CollectionItemCommentsRepository);
  @override
  _i12.CollectionItemPropertiesRepository
      get collectionItemPropertiesRepository => (super.noSuchMethod(
            Invocation.getter(#collectionItemPropertiesRepository),
            returnValue: _FakeCollectionItemPropertiesRepository_10(
              this,
              Invocation.getter(#collectionItemPropertiesRepository),
            ),
          ) as _i12.CollectionItemPropertiesRepository);
  @override
  _i13.CollectionItemMediaRepository get collectionItemMediaRepository =>
      (super.noSuchMethod(
        Invocation.getter(#collectionItemMediaRepository),
        returnValue: _FakeCollectionItemMediaRepository_11(
          this,
          Invocation.getter(#collectionItemMediaRepository),
        ),
      ) as _i13.CollectionItemMediaRepository);
  @override
  _i7.ReleaseMediasRepository get releaseMediasRepository =>
      (super.noSuchMethod(
        Invocation.getter(#releaseMediasRepository),
        returnValue: _FakeReleaseMediasRepository_5(
          this,
          Invocation.getter(#releaseMediasRepository),
        ),
      ) as _i7.ReleaseMediasRepository);
  @override
  _i14.ReleaseService get releaseService => (super.noSuchMethod(
        Invocation.getter(#releaseService),
        returnValue: _FakeReleaseService_12(
          this,
          Invocation.getter(#releaseService),
        ),
      ) as _i14.ReleaseService);
  @override
  _i18.Future<_i15.CollectionItemViewModel> getModel(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getModel,
          [id],
        ),
        returnValue: _i18.Future<_i15.CollectionItemViewModel>.value(
            _FakeCollectionItemViewModel_13(
          this,
          Invocation.method(
            #getModel,
            [id],
          ),
        )),
      ) as _i18.Future<_i15.CollectionItemViewModel>);
  @override
  _i18.Future<_i16.CollectionItemEditViewModel> getEditModel(
          int? collectionItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditModel,
          [collectionItemId],
        ),
        returnValue: _i18.Future<_i16.CollectionItemEditViewModel>.value(
            _FakeCollectionItemEditViewModel_14(
          this,
          Invocation.method(
            #getEditModel,
            [collectionItemId],
          ),
        )),
      ) as _i18.Future<_i16.CollectionItemEditViewModel>);
  @override
  _i18.Future<_i16.CollectionItemEditViewModel> initializeAddModel(
          int? releaseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeAddModel,
          [releaseId],
        ),
        returnValue: _i18.Future<_i16.CollectionItemEditViewModel>.value(
            _FakeCollectionItemEditViewModel_14(
          this,
          Invocation.method(
            #initializeAddModel,
            [releaseId],
          ),
        )),
      ) as _i18.Future<_i16.CollectionItemEditViewModel>);
  @override
  _i18.Future<_i17.CollectionItem> get(int? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue:
            _i18.Future<_i17.CollectionItem>.value(_FakeCollectionItem_15(
          this,
          Invocation.method(
            #get,
            [id],
          ),
        )),
      ) as _i18.Future<_i17.CollectionItem>);
  @override
  _i18.Future<int> upsert(_i26.CollectionItemSaveModel? saveModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [saveModel],
        ),
        returnValue: _i18.Future<int>.value(0),
      ) as _i18.Future<int>);
  @override
  _i18.Future<int> delete(int? collectionItemId) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [collectionItemId],
        ),
        returnValue: _i18.Future<int>.value(0),
      ) as _i18.Future<int>);
}
